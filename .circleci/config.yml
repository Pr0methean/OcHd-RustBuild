# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  rust: circleci/rust@1.6.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.large
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-deps-{{ checksum "main/Cargo.toml" }}
            - cargo-deps
          paths:
            - /home/circleci/.cargo
            - main/target/debug/deps
            - main/target/release/deps
      - rust/install:
          version: nightly
      - run: |
          cd main
          cargo clippy || true
      - rust/build:
          with_cache: false
          release: true
          working_directory: main
      - rust/test:
          with_cache: false
          working_directory: main
      - persist_to_workspace:
          root: main/target/release
          paths:
            - "ochd"
      - store_artifacts:
          path: main/target/release/ochd
          destination: "OcHd"
      - save_cache:
          key: cargo-deps-{{ checksum "main/Cargo.toml" }}
          paths:
            - /home/circleci/.cargo
            - main/target/debug/deps
            - main/target/release/deps
  execute:
    parameters:
      size:
        type: integer
    machine:
      image: ubuntu-2004:current
    resource_class: arm.large
    steps:
      - run: cat /proc/cpuinfo
      - checkout
      - attach_workspace:
          at: main/target/release
      - run: |
          cd main
          ./target/release/ochd << parameters.size >>
      - run: cd main/out && zip -9 -r OcHD-<< parameters.size >>x<< parameters.size >>.zip *
      - store_artifacts:
          path: 'main/out/OcHD-<< parameters.size >>x<< parameters.size >>.zip'
      - store_artifacts:
          path: 'main/log.txt'
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-execute:
    jobs:
      - build
      - execute:
          requires:
            - build
          matrix:
            parameters:
              size: [32,64,128,256,512,1024,2048,4096]
          name: Make Textures << matrix.size >>x<< matrix.size >>